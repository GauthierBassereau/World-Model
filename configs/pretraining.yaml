logging:
  project: world_model
  entity: null
  run_name: null
  log_interval: 25
  sample_interval: 100
  checkpoint_interval: 1000
  output_dir: checkpoints
  tau_log_limit: 500

trainer:
  max_steps: null # null means no limit
  grad_accum_steps: 128
  precision: bf16
  seed: 230503
  device: cuda
  resume_checkpoint: null
  single_batch_overfit: true

dataloader:
  batch_size: 1
  shuffle: false
  num_workers: 0 # need to check why but I get errors with num_workers > 0
  pin_memory: true

optimizer:
  lr: 2.0e-4
  betas: [0.9, 0.95]
  weight_decay: 0.0
  eps: 1.0e-08
  grad_clip_norm: 1.0

dataset:
  repo_id: lerobot/droid_1.0.1
  cameras:
    - observation.images.exterior_1_left
    - observation.images.exterior_2_left
  action_key: observation.state.cartesian_position
  action_representation: "delta"
  episodes: [0, 1, 2, 3, 4, 5]
  sequence_length_distribution: # Dreamerv4 doesn't specify the proportion but I'll guess 0.8 short batches at the begginning and towards the end go to full long batches probably. For now let's keep small batches, will implement the evolution of this distribution later.
    2: 1.0
  frame_delta_seconds: 5.0 / 15.0
  independant_frames_probability: 0.0 # 0.3 # from Dreamerv4
  drop_action_probability: 0.0 # 0.85 # from Dreamerv4

diffusion:
  min_signal: 0.0
  max_signal: 1.0
  base_dimension: 4096 # from RAE paper, to determine noise schedule depending on effective latent dimension
  noise_mean: 0.0   # Set noise_mean=0.0 and noise_std=1.0 to recover a unit Gaussian prior.
  noise_std: 1.0

ema:
  enabled: false # Not sure Dreamerv4 uses it, but usually Flow matching training is better with it so...
  decay: 0.998
  device: null

vision:
  encoder_repo_id: facebook/dinov2-with-registers-base
  decoder_config: rae_dino/decoder/config.json

world_model:
  input_dim: 768
  latent_dim: 1024 # From RAE paper this needs to be > input_dim
  action_dim: 6
  num_registers: 4
  depth: 12
  num_heads: 16
  mlp_multiplier: 4.0
  temporal_attention_interval: 4
  temporal_context_length: 2
  rope_base: 1000.0
  attn_logit_soft_cap: 50.0
  qk_norm_eps: 1.0e-06

ode_solver: # this is for logging and evaluation
  step_size: float = 0.02 # 50 steps generation
  min_signal: float = 0.0
  max_signal: float = 1.0